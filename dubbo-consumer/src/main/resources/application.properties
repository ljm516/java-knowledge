server.port=2222

dubbo.application.id=ljm-dubbo-learn-consumer
dubbo.application.name=ljm-dubbo-learn-consumer
dubbo.registry.address=zookeeper://39.106.4.242:2181
dubbo.protocol.name=dubbo
dubbo.registry.port=1112
## 关闭注册中心启动时检查（注册订阅失败时报错）
dubbo.registry.check=false

dubbo.consumer.loadbalance=roundrobin

# 启动时检查
# dubbo缺省在启动时检查依赖的服务是否可用，不可用时抛出异常，阻止spring初始化完成，以便上线时能及早返现问题，默认check=true。
# 可以通过 check="false" 关闭检查，比如，测试时，有些服务不关心，或者出现了循环依赖，必须有一方先启动。
# 另外，如果你的 Spring 容器是懒加载的，或者通过 API 编程延迟引用服务，请关闭 check，否则服务临时不可用时，会抛出异常，拿到 null 引用，
# 如果 check="false"，总是会返回引用，当服务恢复时，能自动连上。

## 关闭某个服务的启动时检查
#dubbo.reference.xxx.xxx.xxxService.check=false

## 关闭所有服务的启动时检查（没有提供者时报错）
dubbo.consumer.check=false

dubbo.consumer.timeout=1000

# 引用服务缺省监听器，也可在@Reference配置，表示引用某个服务的监听
#dubbo.consumer.listener=timeout





